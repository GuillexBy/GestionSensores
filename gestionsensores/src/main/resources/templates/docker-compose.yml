version: '3.1'

services:

  opiniones:
    build: ./opiniones-rest
    container_name: opiniones
    restart: always
    ports:
      - 5000:5000
    environment:
      URI_MONGODB: mongodb://root:example@mongo:27017/

  restaurantes:
    build: 
      context: .
      dockerfile: ./restaurantes-rest/Dockerfile
    container_name: restaurantes
    restart: always
    ports:
      - 8080:8080
    environment:
      URI_MONGODB: mongodb://Aure:arso@ac-gbkha7k-shard-00-00.gbzbs08.mongodb.net:27017,ac-gbkha7k-shard-00-01.gbzbs08.mongodb.net:27017,ac-gbkha7k-shard-00-02.gbzbs08.mongodb.net:27017/?ssl=true&replicaSet=atlas-ekxpjk-shard-0&authSource=admin&retryWrites=true&w=majority

  pasarela:
    build: 
      context: .
      dockerfile: ./pasarela/Dockerfile
    container_name: pasarela
    restart: always
    ports:
      - 8090:8090
    environment:
      zuul.routes.restaurantes.path : /restaurantes/**
      zuul.routes.restaurantes.url : http://restaurantes:8080/api/restaurantes

      zuul.routes.opiniones.path : /opiniones/**
      zuul.routes.opiniones.url : http://opiniones:5000/api/opiniones

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
